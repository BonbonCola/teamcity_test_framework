{"uid":"f6a6cbb92780031b","name":"test_setup_teamcity_server","fullName":"tests.ui_tests.test_setup_server.TestSetupServer#test_setup_teamcity_server","historyId":"d7e25324f8eb5275e162241ebd57f1fa","time":{"start":1743533600080,"stop":1743533697714,"duration":97634},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557dd040e583 <unknown>\n#1 0x557dd0182a38 <unknown>\n#2 0x557dd01b8335 <unknown>\n#3 0x557dd01eaaa4 <unknown>\n#4 0x557dd01d577d <unknown>\n#5 0x557dd01e874c <unknown>\n#6 0x557dd01d5643 <unknown>\n#7 0x557dd01abb94 <unknown>\n#8 0x557dd01acb85 <unknown>\n#9 0x557dd043ec6e <unknown>\n#10 0x557dd0454975 <unknown>\n#11 0x557dd043fbc5 <unknown>\n#12 0x557dd0455fb5 <unknown>\n#13 0x557dd043484b <unknown>\n#14 0x557dd0471248 <unknown>\n#15 0x557dd04713c8 <unknown>\n#16 0x557dd048b73d <unknown>\n#17 0x7f2607acc609 start_thread","statusTrace":"self = <test_setup_server.TestSetupServer object at 0x7f2e1f7f6fd0>\n\n    def test_setup_teamcity_server(self):\n        setup_page = FirstStartPage.open(self.driver)\n        setup_page.setup_first_start()\n        login_page = LoginPage.open(self.driver)\n>       login_page.create_admin_user()\n\ntests/ui_tests/test_setup_server.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmain/ui/login_page.py:33: in create_admin_user\n    self.type(self.input_admin_username, \"test\")\nmain/ui/base_page.py:29: in type\n    element = self.find(locator)\nmain/ui/base_page.py:13: in find\n    return WebDriverWait(self.driver, timeout).until( #ждем 30 сек, пока элемент не появится\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aab00f0c47950f53aa69b5ee691e8360\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f2e1fb4dd00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557dd040e583 <unknown>\nE       #1 0x557dd0182a38 <unknown>\nE       #2 0x557dd01b8335 <unknown>\nE       #3 0x557dd01eaaa4 <unknown>\nE       #4 0x557dd01d577d <unknown>\nE       #5 0x557dd01e874c <unknown>\nE       #6 0x557dd01d5643 <unknown>\nE       #7 0x557dd01abb94 <unknown>\nE       #8 0x557dd01acb85 <unknown>\nE       #9 0x557dd043ec6e <unknown>\nE       #10 0x557dd0454975 <unknown>\nE       #11 0x557dd043fbc5 <unknown>\nE       #12 0x557dd0455fb5 <unknown>\nE       #13 0x557dd043484b <unknown>\nE       #14 0x557dd0471248 <unknown>\nE       #15 0x557dd04713c8 <unknown>\nE       #16 0x557dd048b73d <unknown>\nE       #17 0x7f2607acc609 start_thread\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743533599192,"stop":1743533599249,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestSetupServer","time":{"start":1743533599249,"stop":1743533600079,"duration":830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557dd040e583 <unknown>\n#1 0x557dd0182a38 <unknown>\n#2 0x557dd01b8335 <unknown>\n#3 0x557dd01eaaa4 <unknown>\n#4 0x557dd01d577d <unknown>\n#5 0x557dd01e874c <unknown>\n#6 0x557dd01d5643 <unknown>\n#7 0x557dd01abb94 <unknown>\n#8 0x557dd01acb85 <unknown>\n#9 0x557dd043ec6e <unknown>\n#10 0x557dd0454975 <unknown>\n#11 0x557dd043fbc5 <unknown>\n#12 0x557dd0455fb5 <unknown>\n#13 0x557dd043484b <unknown>\n#14 0x557dd0471248 <unknown>\n#15 0x557dd04713c8 <unknown>\n#16 0x557dd048b73d <unknown>\n#17 0x7f2607acc609 start_thread","statusTrace":"self = <test_setup_server.TestSetupServer object at 0x7f2e1f7f6fd0>\n\n    def test_setup_teamcity_server(self):\n        setup_page = FirstStartPage.open(self.driver)\n        setup_page.setup_first_start()\n        login_page = LoginPage.open(self.driver)\n>       login_page.create_admin_user()\n\ntests/ui_tests/test_setup_server.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmain/ui/login_page.py:33: in create_admin_user\n    self.type(self.input_admin_username, \"test\")\nmain/ui/base_page.py:29: in type\n    element = self.find(locator)\nmain/ui/base_page.py:13: in find\n    return WebDriverWait(self.driver, timeout).until( #ждем 30 сек, пока элемент не появится\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aab00f0c47950f53aa69b5ee691e8360\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f2e1fb4dd00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557dd040e583 <unknown>\nE       #1 0x557dd0182a38 <unknown>\nE       #2 0x557dd01b8335 <unknown>\nE       #3 0x557dd01eaaa4 <unknown>\nE       #4 0x557dd01d577d <unknown>\nE       #5 0x557dd01e874c <unknown>\nE       #6 0x557dd01d5643 <unknown>\nE       #7 0x557dd01abb94 <unknown>\nE       #8 0x557dd01acb85 <unknown>\nE       #9 0x557dd043ec6e <unknown>\nE       #10 0x557dd0454975 <unknown>\nE       #11 0x557dd043fbc5 <unknown>\nE       #12 0x557dd0455fb5 <unknown>\nE       #13 0x557dd043484b <unknown>\nE       #14 0x557dd0471248 <unknown>\nE       #15 0x557dd04713c8 <unknown>\nE       #16 0x557dd048b73d <unknown>\nE       #17 0x7f2607acc609 start_thread\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"c114d066233edbd","name":"log","source":"c114d066233edbd.txt","type":"text/plain","size":141748}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestSetupServer::0","time":{"start":1743533697806,"stop":1743533697859,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"setup"},{"name":"parentSuite","value":"tests.ui_tests"},{"name":"suite","value":"test_setup_server"},{"name":"subSuite","value":"TestSetupServer"},{"name":"host","value":"fv-az1618-155"},{"name":"thread","value":"3354-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui_tests.test_setup_server"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":7,"unknown":0,"total":8},"items":[{"uid":"817ba45d95fea190","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/59//#testresult/817ba45d95fea190","status":"passed","time":{"start":1743530487312,"stop":1743530553981,"duration":66669}},{"uid":"f45130eb04137d36","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/58//#testresult/f45130eb04137d36","status":"passed","time":{"start":1743529910423,"stop":1743529980709,"duration":70286}},{"uid":"5069444ed85afb0b","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/57//#testresult/5069444ed85afb0b","status":"passed","time":{"start":1743527248164,"stop":1743527317536,"duration":69372}},{"uid":"a0c3bbc7d3a7b8c9","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/56//#testresult/a0c3bbc7d3a7b8c9","status":"passed","time":{"start":1743526142354,"stop":1743526208822,"duration":66468}},{"uid":"6be5b59ae36a95a9","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/55//#testresult/6be5b59ae36a95a9","status":"passed","time":{"start":1743523984287,"stop":1743524055015,"duration":70728}},{"uid":"af03d9c53ce3d975","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/54//#testresult/af03d9c53ce3d975","status":"passed","time":{"start":1743523132481,"stop":1743523198605,"duration":66124}},{"uid":"958f5eb9bb32b389","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/api/53//#testresult/958f5eb9bb32b389","status":"passed","time":{"start":1743521749328,"stop":1743521815861,"duration":66533}}]},"tags":["setup"]},"source":"f6a6cbb92780031b.json","parameterValues":[]}