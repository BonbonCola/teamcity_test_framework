{"uid":"b3a6ba5f64be0f97","name":"test_user_creates_build","fullName":"tests.ui_tests.test_create_build.TestCreateBuild#test_user_creates_build","historyId":"0df0464e23757e98009be32e2329e3b3","time":{"start":1743690080736,"stop":1743690150510,"duration":69774},"description":"User should be able to create build","descriptionHtml":"<p>User should be able to create build</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found","statusTrace":"self = <test_create_build.TestCreateBuild object at 0x7ff95aed0910>\n\n    def test_user_creates_build(self):\n        \"\"\"User should be able to create build\"\"\"\n        # подготовка окружения\n        with allure.step(\"Create user and project\"):\n            user_request = CheckedRequest(self.specifications.superUserSpec(), Endpoint.USERS.url)\n            user_request.create(self.test_data.user.model_dump())\n            project_request = CheckedRequest(self.specifications.authSpec(self.test_data.user), Endpoint.PROJECTS.url)\n            project_request.create(self.test_data.project.model_dump())\n        with allure.step(\"Login as user\"):\n            self.driver.delete_all_cookies()\n            login_page = LoginPage.open(self.driver)\n            login_page.login(self.test_data.user)\n        # взаимодействие с UI\n        with allure.step(\"Open `Create Build Page` (http://localhost:8111/admin/createObjectMenu.html)\"):\n            create_build_page = BuildCreatePage.open(driver = self.driver, project_id=self.test_data.project.id)\n            time.sleep(10)\n        with allure.step(\"Send all build parameters (repository URL)\"):\n>           create_build_page.create_form(\"https://github.com/BonbonCola/test_teamcity\")\n\ntests/ui_tests/test_create_build.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmain/ui/build_create_page.py:20: in create_form\n    super().base_create_form(repository_url)\nmain/ui/base_create_page.py:18: in base_create_form\n    self.type(self.input_repository_url, repository_url)\nmain/ui/base_page.py:29: in type\n    element = self.find(locator)\nmain/ui/base_page.py:13: in find\n    return WebDriverWait(self.driver, timeout).until( #ждем 30 сек, пока элемент не появится\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:137: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff95ad756d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"session timed out or not found\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSessionIdException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743690078759,"stop":1743690078805,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestCreateBuild","time":{"start":1743690078805,"stop":1743690080735,"duration":1930},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"User should be able to create build","status":"broken","statusMessage":"selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found","statusTrace":"self = <test_create_build.TestCreateBuild object at 0x7ff95aed0910>\n\n    def test_user_creates_build(self):\n        \"\"\"User should be able to create build\"\"\"\n        # подготовка окружения\n        with allure.step(\"Create user and project\"):\n            user_request = CheckedRequest(self.specifications.superUserSpec(), Endpoint.USERS.url)\n            user_request.create(self.test_data.user.model_dump())\n            project_request = CheckedRequest(self.specifications.authSpec(self.test_data.user), Endpoint.PROJECTS.url)\n            project_request.create(self.test_data.project.model_dump())\n        with allure.step(\"Login as user\"):\n            self.driver.delete_all_cookies()\n            login_page = LoginPage.open(self.driver)\n            login_page.login(self.test_data.user)\n        # взаимодействие с UI\n        with allure.step(\"Open `Create Build Page` (http://localhost:8111/admin/createObjectMenu.html)\"):\n            create_build_page = BuildCreatePage.open(driver = self.driver, project_id=self.test_data.project.id)\n            time.sleep(10)\n        with allure.step(\"Send all build parameters (repository URL)\"):\n>           create_build_page.create_form(\"https://github.com/BonbonCola/test_teamcity\")\n\ntests/ui_tests/test_create_build.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmain/ui/build_create_page.py:20: in create_form\n    super().base_create_form(repository_url)\nmain/ui/base_create_page.py:18: in base_create_form\n    self.type(self.input_repository_url, repository_url)\nmain/ui/base_page.py:29: in type\n    element = self.find(locator)\nmain/ui/base_page.py:13: in find\n    return WebDriverWait(self.driver, timeout).until( #ждем 30 сек, пока элемент не появится\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:137: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff95ad756d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"session timed out or not found\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSessionIdException","steps":[{"name":"Create user and project","time":{"start":1743690080736,"stop":1743690083080,"duration":2344},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Login as user","time":{"start":1743690083080,"stop":1743690086597,"duration":3517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Open `Create Build Page` (http://localhost:8111/admin/createObjectMenu.html)","time":{"start":1743690086597,"stop":1743690135502,"duration":48905},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send all build parameters (repository URL)","time":{"start":1743690135503,"stop":1743690150505,"duration":15002},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found\n\n","statusTrace":"  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/tests/ui_tests/test_create_build.py\", line 33, in test_user_creates_build\n    create_build_page.create_form(\"https://github.com/BonbonCola/test_teamcity\")\n  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/main/ui/build_create_page.py\", line 20, in create_form\n    super().base_create_form(repository_url)\n  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/main/ui/base_create_page.py\", line 18, in base_create_form\n    self.type(self.input_repository_url, repository_url)\n  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/main/ui/base_page.py\", line 29, in type\n    element = self.find(locator)\n              ^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/main/ui/base_page.py\", line 13, in find\n    return WebDriverWait(self.driver, timeout).until( #ждем 30 сек, пока элемент не появится\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 137, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"991ba7b941b9d3bf","name":"log","source":"991ba7b941b9d3bf.txt","type":"text/plain","size":12552},{"uid":"62a442fbb2c88818","name":"stdout","source":"62a442fbb2c88818.txt","type":"text/plain","size":1769}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestCreateBuild::0","time":{"start":1743690150639,"stop":1743690150862,"duration":223},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSessionIdException: Message: session timed out or not found\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/python.py\", line 825, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/python.py\", line 717, in _call_with_optional_argument\n    func()\n  File \"/home/runner/work/teamcity_test_framework/teamcity_test_framework/main/framework/base_ui_test.py\", line 33, in teardown_method\n    self.driver.quit()\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 589, in quit\n    self.execute(Command.QUIT)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.ui_tests"},{"name":"suite","value":"test_create_build"},{"name":"subSuite","value":"TestCreateBuild"},{"name":"host","value":"fv-az1047-38"},{"name":"thread","value":"4127-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui_tests.test_create_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"495b9905cdc6356","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/62//#testresult/495b9905cdc6356","status":"failed","statusDetails":"AssertionError: Ошибка: 404","time":{"start":1743689114465,"stop":1743689198820,"duration":84355}},{"uid":"9d125f86899ea0f3","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/61//#testresult/9d125f86899ea0f3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b23411b583 <unknown>\n#1 0x55b233e8fa38 <unknown>\n#2 0x55b233ec5335 <unknown>\n#3 0x55b233ef7aa4 <unknown>\n#4 0x55b233ee277d <unknown>\n#5 0x55b233ef574c <unknown>\n#6 0x55b233ee2643 <unknown>\n#7 0x55b233eb8b94 <unknown>\n#8 0x55b233eb9b85 <unknown>\n#9 0x55b23414bc6e <unknown>\n#10 0x55b234161975 <unknown>\n#11 0x55b23414cbc5 <unknown>\n#12 0x55b234162fb5 <unknown>\n#13 0x55b23414184b <unknown>\n#14 0x55b23417e248 <unknown>\n#15 0x55b23417e3c8 <unknown>\n#16 0x55b23419873d <unknown>\n#17 0x7f1d4cc62609 start_thread","time":{"start":1743685001867,"stop":1743685077577,"duration":75710}},{"uid":"ebea46453a426f29","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/60//#testresult/ebea46453a426f29","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561ece8db583 <unknown>\n#1 0x561ece64fa38 <unknown>\n#2 0x561ece685335 <unknown>\n#3 0x561ece6b7aa4 <unknown>\n#4 0x561ece6a277d <unknown>\n#5 0x561ece6b574c <unknown>\n#6 0x561ece6a2643 <unknown>\n#7 0x561ece678b94 <unknown>\n#8 0x561ece679b85 <unknown>\n#9 0x561ece90bc6e <unknown>\n#10 0x561ece921975 <unknown>\n#11 0x561ece90cbc5 <unknown>\n#12 0x561ece922fb5 <unknown>\n#13 0x561ece90184b <unknown>\n#14 0x561ece93e248 <unknown>\n#15 0x561ece93e3c8 <unknown>\n#16 0x561ece95873d <unknown>\n#17 0x7fb30814f609 start_thread","time":{"start":1743533669359,"stop":1743533746398,"duration":77039}},{"uid":"7a422d09f22c09a0","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/59//#testresult/7a422d09f22c09a0","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5588f21f1583 <unknown>\n#1 0x5588f1f65a38 <unknown>\n#2 0x5588f1f9b335 <unknown>\n#3 0x5588f1fcdaa4 <unknown>\n#4 0x5588f1fb877d <unknown>\n#5 0x5588f1fcb74c <unknown>\n#6 0x5588f1fb8643 <unknown>\n#7 0x5588f1f8eb94 <unknown>\n#8 0x5588f1f8fb85 <unknown>\n#9 0x5588f2221c6e <unknown>\n#10 0x5588f2237975 <unknown>\n#11 0x5588f2222bc5 <unknown>\n#12 0x5588f2238fb5 <unknown>\n#13 0x5588f221784b <unknown>\n#14 0x5588f2254248 <unknown>\n#15 0x5588f22543c8 <unknown>\n#16 0x5588f226e73d <unknown>\n#17 0x7fe0ef8f5609 start_thread","time":{"start":1743530565270,"stop":1743530653442,"duration":88172}},{"uid":"f9e0c46862667300","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/58//#testresult/f9e0c46862667300","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d998814583 <unknown>\n#1 0x55d998588a38 <unknown>\n#2 0x55d9985be335 <unknown>\n#3 0x55d9985f0aa4 <unknown>\n#4 0x55d9985db77d <unknown>\n#5 0x55d9985ee74c <unknown>\n#6 0x55d9985db643 <unknown>\n#7 0x55d9985b1b94 <unknown>\n#8 0x55d9985b2b85 <unknown>\n#9 0x55d998844c6e <unknown>\n#10 0x55d99885a975 <unknown>\n#11 0x55d998845bc5 <unknown>\n#12 0x55d99885bfb5 <unknown>\n#13 0x55d99883a84b <unknown>\n#14 0x55d998877248 <unknown>\n#15 0x55d9988773c8 <unknown>\n#16 0x55d99889173d <unknown>\n#17 0x7f81c6f2c609 start_thread","time":{"start":1743529999357,"stop":1743530066559,"duration":67202}},{"uid":"114b7e9323f5241b","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/57//#testresult/114b7e9323f5241b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5558eddf5583 <unknown>\n#1 0x5558edb69a38 <unknown>\n#2 0x5558edb9f335 <unknown>\n#3 0x5558edbd1aa4 <unknown>\n#4 0x5558edbbc77d <unknown>\n#5 0x5558edbcf74c <unknown>\n#6 0x5558edbbc643 <unknown>\n#7 0x5558edb92b94 <unknown>\n#8 0x5558edb93b85 <unknown>\n#9 0x5558ede25c6e <unknown>\n#10 0x5558ede3b975 <unknown>\n#11 0x5558ede26bc5 <unknown>\n#12 0x5558ede3cfb5 <unknown>\n#13 0x5558ede1b84b <unknown>\n#14 0x5558ede58248 <unknown>\n#15 0x5558ede583c8 <unknown>\n#16 0x5558ede7273d <unknown>\n#17 0x7f1e408fc609 start_thread","time":{"start":1743527362279,"stop":1743527429483,"duration":67204}},{"uid":"e8af573a2ab48cdf","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/56//#testresult/e8af573a2ab48cdf","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fa19b9c583 <unknown>\n#1 0x55fa19910a38 <unknown>\n#2 0x55fa19946335 <unknown>\n#3 0x55fa19978aa4 <unknown>\n#4 0x55fa1996377d <unknown>\n#5 0x55fa1997674c <unknown>\n#6 0x55fa19963643 <unknown>\n#7 0x55fa19939b94 <unknown>\n#8 0x55fa1993ab85 <unknown>\n#9 0x55fa19bccc6e <unknown>\n#10 0x55fa19be2975 <unknown>\n#11 0x55fa19bcdbc5 <unknown>\n#12 0x55fa19be3fb5 <unknown>\n#13 0x55fa19bc284b <unknown>\n#14 0x55fa19bff248 <unknown>\n#15 0x55fa19bff3c8 <unknown>\n#16 0x55fa19c1973d <unknown>\n#17 0x7f27b7b99609 start_thread","time":{"start":1743526202913,"stop":1743526256150,"duration":53237}},{"uid":"4f9630f54505f568","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/54//#testresult/4f9630f54505f568","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5558f75e4583 <unknown>\n#1 0x5558f7358a38 <unknown>\n#2 0x5558f738e335 <unknown>\n#3 0x5558f73c0aa4 <unknown>\n#4 0x5558f73ab77d <unknown>\n#5 0x5558f73be74c <unknown>\n#6 0x5558f73ab643 <unknown>\n#7 0x5558f7381b94 <unknown>\n#8 0x5558f7382b85 <unknown>\n#9 0x5558f7614c6e <unknown>\n#10 0x5558f762a975 <unknown>\n#11 0x5558f7615bc5 <unknown>\n#12 0x5558f762bfb5 <unknown>\n#13 0x5558f760a84b <unknown>\n#14 0x5558f7647248 <unknown>\n#15 0x5558f76473c8 <unknown>\n#16 0x5558f766173d <unknown>\n#17 0x7f9ff0d61609 start_thread","time":{"start":1743523199745,"stop":1743523259389,"duration":59644}},{"uid":"f9b2f9edfbdfae4c","reportUrl":"https://BonbonCola.github.io/teamcity_test_framework/ui/53//#testresult/f9b2f9edfbdfae4c","status":"failed","statusDetails":"AssertionError: Ошибка: 401","time":{"start":1743521864444,"stop":1743521864562,"duration":118}}]},"tags":["regression"]},"source":"b3a6ba5f64be0f97.json","parameterValues":[]}